// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortsApi;
using PortsApi.Models;

#nullable disable

namespace PortsApi.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20230411183759_AddTESTLogTable")]
    partial class AddTESTLogTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortsApi.CommonMngFeature", b =>
                {
                    b.Property<int>("Objectid")
                        .HasColumnType("int")
                        .HasColumnName("OBJECTID");

                    b.Property<double?>("AreaId")
                        .HasColumnType("float")
                        .HasColumnName("AREA_ID");

                    b.Property<string>("AsMade")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("AS_MADE");

                    b.Property<string>("Constrct")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CONSTRCT");

                    b.Property<double?>("CovPrjId")
                        .HasColumnType("float")
                        .HasColumnName("COV_PRJ_ID");

                    b.Property<double?>("DocsNum")
                        .HasColumnType("float")
                        .HasColumnName("DOCS_NUM");

                    b.Property<double?>("GeomArea")
                        .HasColumnType("float")
                        .HasColumnName("GEOM_AREA");

                    b.Property<double?>("GeomLen")
                        .HasColumnType("float")
                        .HasColumnName("GEOM_LEN");

                    b.Property<string>("GroupList")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GROUP_LIST");

                    b.Property<double?>("MaaganId")
                        .HasColumnType("float")
                        .HasColumnName("MAAGAN_ID");

                    b.Property<double?>("MgnType")
                        .HasColumnType("float")
                        .HasColumnName("MGN_TYPE");

                    b.Property<string>("MgnUpd")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("MGN_UPD");

                    b.Property<string>("PlanDate")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PLAN_DATE");

                    b.Property<double?>("PlanNum")
                        .HasColumnType("float")
                        .HasColumnName("PLAN_NUM");

                    b.Property<string>("ProjDate")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("PROJ_DATE");

                    b.Property<double?>("ProjectId")
                        .HasColumnType("float")
                        .HasColumnName("PROJECT_ID");

                    b.Property<string>("Status")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TifulName")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("TIFUL_NAME");

                    b.Property<double?>("TifulType")
                        .HasColumnType("float")
                        .HasColumnName("TIFUL_TYPE");

                    b.Property<string>("UpdDate")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("UPD_DATE");

                    b.Property<string>("Usage")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("USAGE");

                    b.Property<double?>("UserId")
                        .HasColumnType("float")
                        .HasColumnName("USER_ID");

                    b.Property<double?>("Version")
                        .HasColumnType("float")
                        .HasColumnName("VERSION");

                    b.HasKey("Objectid")
                        .HasName("PK__COMMON_M__F4B70D850EA47FFE");

                    b.ToTable("COMMON_MNG_FEATURES", (string)null);
                });

            modelBuilder.Entity("PortsApi.CommonMngFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FeatureId")
                        .HasColumnType("int")
                        .HasColumnName("FeatureID");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileID");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FolderId")
                        .HasColumnType("int")
                        .HasColumnName("FolderID");

                    b.Property<string>("FolderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LayerId")
                        .HasColumnType("int")
                        .HasColumnName("LayerID");

                    b.HasKey("Id")
                        .HasName("PK__COMMON_M__3214EC27C3C87AC1");

                    b.HasIndex("FeatureId");

                    b.HasIndex("FolderId");

                    b.HasIndex("LayerId");

                    b.ToTable("COMMON_MNG_FILES", (string)null);
                });

            modelBuilder.Entity("PortsApi.CommonMngFilesPermission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanView")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__COMMON_M__3214EC27643AEBF9");

                    b.HasIndex("UserId");

                    b.ToTable("COMMON_MNG_FILES_PERMISSIONS", (string)null);
                });

            modelBuilder.Entity("PortsApi.CommonMngFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FeatureId")
                        .HasColumnType("int")
                        .HasColumnName("FeatureID");

                    b.Property<string>("FolderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LayerId")
                        .HasColumnType("int")
                        .HasColumnName("LayerID");

                    b.HasKey("Id")
                        .HasName("PK__COMMON_M__3214EC2736F76125");

                    b.ToTable("COMMON_MNG_FOLDERS", (string)null);
                });

            modelBuilder.Entity("PortsApi.CommonMngLayer", b =>
                {
                    b.Property<int>("LayerId")
                        .HasColumnType("int")
                        .HasColumnName("LayerID");

                    b.Property<string>("LayerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LayerId")
                        .HasName("PK__layers_t__83790DA20E2DE535");

                    b.ToTable("COMMON_MNG_LAYERS", (string)null);
                });

            modelBuilder.Entity("PortsApi.CommonMngUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__COMMON_M__CB9A1CDF1BAB6A38");

                    b.HasIndex(new[] { "UserName" }, "UQ__COMMON_M__C9F284560392A68E")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("COMMON_MNG_USERS", (string)null);
                });

            modelBuilder.Entity("PortsApi.TESTLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TESTlogs");
                });

            modelBuilder.Entity("PortsApi.CommonMngFile", b =>
                {
                    b.HasOne("PortsApi.CommonMngFeature", "Feature")
                        .WithMany("CommonMngFiles")
                        .HasForeignKey("FeatureId")
                        .HasConstraintName("FK__COMMON_MN__Featu__31EC6D26");

                    b.HasOne("PortsApi.CommonMngFolder", "Folder")
                        .WithMany("CommonMngFiles")
                        .HasForeignKey("FolderId")
                        .HasConstraintName("FK__COMMON_MN__Folde__300424B4");

                    b.HasOne("PortsApi.CommonMngLayer", "Layer")
                        .WithMany("CommonMngFiles")
                        .HasForeignKey("LayerId")
                        .HasConstraintName("FK__COMMON_MN__Layer__30F848ED");

                    b.Navigation("Feature");

                    b.Navigation("Folder");

                    b.Navigation("Layer");
                });

            modelBuilder.Entity("PortsApi.CommonMngFilesPermission", b =>
                {
                    b.HasOne("PortsApi.CommonMngUser", "User")
                        .WithMany("CommonMngFilesPermissions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__COMMON_MN__UserI__29572725");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PortsApi.CommonMngFeature", b =>
                {
                    b.Navigation("CommonMngFiles");
                });

            modelBuilder.Entity("PortsApi.CommonMngFolder", b =>
                {
                    b.Navigation("CommonMngFiles");
                });

            modelBuilder.Entity("PortsApi.CommonMngLayer", b =>
                {
                    b.Navigation("CommonMngFiles");
                });

            modelBuilder.Entity("PortsApi.CommonMngUser", b =>
                {
                    b.Navigation("CommonMngFilesPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
